#!/bin/bash

# ? manages diverse package manager updates on linux, mainly debian and ubuntu;
# ?  sensitive to most errors in command chain and often requires human conformations;
# ? - [if present] `apt`, updates and cleans up:
# ?   `update`, update info of packages from repository;
# ?   `upgrade`, update packages;
# ?   `full-upgrade`, update packages including possibly breaking changes into the system;
# ?   `autoremove`, remove unused packages;
# ?   `purge`, remove residual package configs;
# ?   `autoclean`, remove non-relevant downloaded packages;
# ? - [if present] `snap`, updates;
# ? - [if present] `flatpak`, update & auto-remove:
# ?   `update`, update packages;
# ?   `autoremove`, remove unused packages;
# ? - [if present] `non-managed`, launch `update.user` script intended for updating your system parts not managed by any package manager;
# ?   modify `update.user` script in the same folder for your system configuration and liking or delete script to permanently disable;
# ? - [if present & args enabled] `firmware`, updates firmware drivers and firmware itself;
# ? - [if present & args enabled] `initramfs`, updates initramfs for all kernels;
# ? - [if present & args enabled] `dist`, perform distribution version update;
# ? args:
# ?   apt - disable all commands, except apt ones - i.e. run only apt commands;
# ?   --no-apt - do not run apt commands;
# ?     --no-apt-update - do not run apt update command;
# ?     --no-apt-upgrade - do not run apt upgrade command;
# ?     --no-apt-full-upgrade - do not run apt full-upgrade command;
# ?     --no-apt-dist-upgrade - do not run apt dist-upgrade command;
# ?     --no-apt-autoremove - do not run apt autoremove command;
# ?     --no-apt-purge - do not run apt purge command;
# ?   --no-snap - do not run snap commands;
# ?   --no-flatpak - do not run flatpak commands;
# ?     --no-flatpak-update - do not run flatpak update command;
# ?   --no-user - do not run `update.user` script in the same folder;
# ?   --no-firmware - do not run firmware update comand;

script_folder=$(dirname "$(readlink -fm "$0")")
script_user=$script_folder/update.user

# c - color_text;
# c -clear; m - main; h - header;
cc="\033[0m"
cm="\033[0;32m"
ch="\033[0;34m"

# m - text modifier;
# b- bold;
mc=$(tput sgr0)
mb=$(tput bold)

function padding_full() {
    echo "$(tput cols)"
}

function padding_rest() {
    echo "$(($(padding_full) - 23))"
}

function padding_quoter() {
    echo "$(($(padding_rest) / 4))"
}

function repeat() {
    result=""
    i=0
    
    while [ $i -lt $1 ]; do
        result="$result$2"
        i=$(($i + 1))
    done
    
    echo $result
}

echo -e "\n\n" && \
echo -e "${cm}$(repeat $(padding_full) '█')${cc}" && \
echo -e "${cm}███ ${ch}${mb}system update${mc}${cm} █████$(repeat $(padding_rest) '█')${cc}" && \
echo -e "${cm}$(repeat $(padding_full) '█')\n${cc}" && \
([[ "$*" != *"--no-apt"* ]] && (command -v apt &> /dev/null) && \
    echo -e "${cm}███ ${ch}${mb}apt${mc}${cm} ███████████████$(repeat $(padding_rest) '█')${cc}" && \
    ([[ "$*" != *"--no-apt-update"* ]] && \
        echo -e "${cm}    === ${ch}${mb}update${mc}${cm}  --- ---$(repeat $(padding_quoter) ' ---')${cc}" && \
        sudo apt update) && \
    ([[ "$*" != *"--no-apt-upgrade"* ]] && \
        echo -e "${cm}    === ${ch}${mb}upgrade${mc}${cm} --- ---$(repeat $(padding_quoter) ' ---')${cc}" && \
        sudo apt upgrade --with-new-pkgs) && \
    ([[ "$*" != *"--no-apt-full-upgrade"* ]] && \
        echo -e "${cm}    === ${ch}${mb}full-upgrade${mc}${cm} --$(repeat $(padding_quoter) ' ---')${cc}" && \
        sudo apt full-upgrade) && \
    ([[ "$*" != *"--no-apt-dist-upgrade"* ]] && \
        echo -e "${cm}    === ${ch}${mb}dist${mc}${cm} -- --- ---$(repeat $(padding_quoter) ' ---')${cc}" && \
        ((command -v do-release-upgrade &> /dev/null) && sudo do-release-upgrade --allow-third-party) || \
        sudo apt dist-upgrade) && \
    ([[ "$*" != *"--no-apt-autoremove"* ]] && \
        echo -e "${cm}    === ${ch}${mb}autoremove${mc}${cm}  ---$(repeat $(padding_quoter) ' ---')${cc}" && \
        sudo apt autoremove) && \
    ([[ "$*" != *"--no-apt-purge"* ]] && \
        echo -e "${cm}    === ${ch}${mb}purge${mc}${cm} - --- ---$(repeat $(padding_quoter) ' ---')${cc}" && \
        sudo apt purge $(dpkg --get-selections | grep deinstall | cut -f1)) && \
    echo -e "${cm}███ ${ch}${mb}apt done${mc}${cm} ██████████$(repeat $(padding_rest) '█')\n${cc}" || true) && \
([[ "$*" != *"--no-snap"* ]] && (command -v snap &> /dev/null) && [[ "$*" != *"apt"* ]] && \
    echo -e "${cm}███ ${ch}${mb}snap${mc}${cm} ██████████████$(repeat $(padding_rest) '█')${cc}" && \
    snap refresh && 
    echo -e "${cm}███ ${ch}${mb}snap done${mc}${cm} █████████$(repeat $(padding_rest) '█')\n${cc}" || true) && \
([[ "$*" != *"--no-flatpak"* ]] && (command -v flatpak &> /dev/null) && [[ "$*" != *"apt"* ]] && \
    echo -e "${cm}███ ${ch}${mb}flatpak${mc}${cm} ███████████$(repeat $(padding_rest) '█')${cc}" && \
    ([[ "$*" != *"--no-flatpak-update"* ]] && \
        echo -e "${cm}    === ${ch}${mb}update${mc}${cm}  --- ---$(repeat $(padding_quoter) ' ---')${cc}" && \
        flatpak update) && \
    ([[ "$*" != *"--no-flatpak-autoremove"* ]] && \
        echo -e "${cm}    === ${ch}${mb}autoremove${mc}${cm}  ---$(repeat $(padding_quoter) ' ---')${cc}" && \
        flatpak uninstall --unused) && \
    echo -e "${cm}███ ${ch}${mb}flatpak done${mc}${cm} ██████$(repeat $(padding_rest) '█')\n${cc}" || true) && \
([[ "$*" != *"--no-user"* ]] && ([[ -f $script_user ]]) && [[ "$*" != *"apt"* ]] && \
    echo -e "${cm}███ ${ch}${mb}unmanaged${mc}${cm} █████████$(repeat $(padding_rest) '█')${cc}" && \
    $script_user "${cm}    === ${ch}${mb}" "${mc}${cm}$(repeat $(padding_quoter) ' ---')${cc}" && \
    echo -e "${cm}███ ${ch}${mb}unmanaged done${mc}${cm} ████$(repeat $(padding_rest) '█')\n${cc}" || true) && \
([[ "$*" != *"--no-firmware"* ]] && (command -v fwupdmgr &> /dev/null) && [[ "$*" != *"apt"* ]] && \
    echo -e "${cm}███ ${ch}${mb}firmware${mc}${cm} ██████████$(repeat $(padding_rest) '█')${cc}" && \
    sudo fwupdmgr update && \
    echo -e "${cm}███ ${ch}${mb}firmware done${mc}${cm} █████$(repeat $(padding_rest) '█')\n${cc}" || true) && \
echo -e "${cm}$(repeat $(padding_full) '█')${cc}" && \
echo -e "${cm}███ ${ch}${mb}system update done${mc}${cm} $(repeat $(padding_rest) '█')${cc}" && \
echo -e "${cm}$(repeat $(padding_full) '█')${cc}" && \
echo -e "\n\n" || echo -e "${cm}${mc}"
